{
  "hash": "81c8be8e56b516e84eb985100b2f7dbd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Populate templates with R\nexecute: \n eval: true\n---\n\n\n## Set up work directory\n\nWe use library `here` to define relative paths\n\n::: {.cell}\n\n```{.r .cell-code}\nhere::i_am(\"how2/populate-templates-R.qmd\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nhere() starts at /Users/z3529065/proyectos/typology-website/typology-map-info\n```\n\n\n:::\n:::\n\n\n## Read profile information\n\nWe read the profile information from the workbook downloaded from OSF and complement this with information about the biomes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(readr)\n\nout_folder <- here::here(\"gisdata\", \"profiles\")\ndest_file <- here::here(out_folder,  \"biome-names.csv\")\nbiome_names <- read_csv(dest_file, show_col_types = FALSE) |>\n    rename(\"biome code\" = \"biome_code\" , \"biome name\" = \"name\") \n\ndest_file <- here::here(out_folder,  \"IUCN-GET-profiles-exported.xlsx\")\nprofile_info <- read_excel(dest_file, sheet = 2) |> \n    left_join(biome_names, by = \"biome code\")\n```\n:::\n\n\n## Output initial qmd file\n\nNow we can export this information into a template `qmd` file to show the results for all functional groups.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntemplate_text <- \"---\ntitle: \\\"%s\\\"\nsubtitle: \\\"%s\\\"\nparams:\n efgcode: %s\ncategories:\n - %s\nformat:\n html: default\nexecute:\n   echo: false\n---\n\n{{< include _short-descriptions.qmd >}}\n{{< include _map.qmd >}}\n{{< include _profile-versions.qmd >}}\n\"\n\noutdata <- profile_info |> \n    mutate(out = sprintf(template_text, \n                name, `biome name`, code, `biome code`), \n            outfile = here::here(\"efg-info\", sprintf(\"%s.qmd\", gsub(\"\\\\.\", \"_\", code)))) |>\n    select(outfile, out) \n\nfor (j in seq(along=outdata$out)) {\n    outfile <- slice(outdata,j) |> pull(outfile)\n    outtext <- slice(outdata,j) |> pull(out)\n    \n    if (!file.exists(outfile)) {\n        cat(outtext, file =  outfile)\n    }\n}\n```\n:::\n\n\nAnd similar for all valid maps:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntoday <- format(Sys.time(), \"%d %b %Y\")\ntemplate_text <- \"---\ntitle: \\\"Valid map for EFG %s\\\"\nsubtitle: \\\"%s\\\"\ndate: %s\nparams:\n efgcode: %s\ncategories:\n - %s\n - valid\nformat:\n html: default\nexecute:\n   echo: false\n---\n\n{{< include _valid_map_info.qmd >}}\n{{< include _valid_maps_database.qmd >}}\n\"\n\noutdata <- profile_info |> \n    mutate(out = sprintf(template_text, \n                `short name`, `biome name`, today, code, `biome code`), \n            outfile = here::here(\"map-info\", sprintf(\"%s_valid.qmd\", gsub(\"\\\\.\", \"_\", code)))) |>\n    select(outfile, out) \n\nfor (j in seq(along=outdata$out)) {\n    outfile <- slice(outdata,j) |> pull(outfile)\n    outtext <- slice(outdata,j) |> pull(out)\n    \n    if (!file.exists(outfile)) {\n        cat(outtext, file =  outfile)\n    }\n}\n```\n:::",
    "supporting": [
      "populate-templates-R_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}