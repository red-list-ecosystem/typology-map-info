---
title: "Valid map for EFG T2.2"
date: 2024 May 6
params:
 efgcode: T2.2
categories:
 - T2
 - valid
format:
 html: default
execute: 
  echo: false
---

{{< include _valid_map_info.qmd >}}

## Raster map

Locate map using map code and map version attributes:

```{r}
raster_name <- 
    sprintf("%s_%s.tif",
        map_attrs["map_code"],
        map_attrs["map_version"])
```

```{r}
#| eval: false
#| echo: false

# we use this internally to speed up some steps:
workdir <- here::here("sandbox", "latest")
if (!dir.exists(workdir))
    dir.create(workdir, recursive = TRUE)
```

Extract the data here (unless it already exists)
```{r}
#| eval: false
if (!raster_name %in% dir(workdir))
    untar(rast_tar, files = raster_name, exdir = workdir)
```


We'll use the terra library to read the raster file
```{r}
#| eval: false
selected_raster <- terra::rast(paste(workdir, raster_name, sep = "/"))

```

Summary of the raster layer according to `terra::rast`:

```{r}
#| eval: false
selected_raster
```

```{r}
#| eval: false
plot(selected_raster)
```


## Vector map

We follow similar steps for the vector files. 

We vector archive is here:

```{r}
#| eval: false
vect_tar <- here::here(out_folder, "all-maps-vector-geojson.tar.bz2")
```

We select the map for this functional group using the map_code and map_version from the map details xml:

```{r}
#| eval: false
vector_name <- 
    sprintf("%s_%s.json",
        map_info |> xml_attr("map_code"),
        map_info |> xml_attr("map_version"))
```

We uncompress this into the tempdir

```{r}
#| eval: false
print(workdir)
if (!vector_name %in% dir(workdir))
    untar(vect_tar, files = vector_name, exdir = workdir)
```

```{r}
#| eval: false
selected_vector <- terra::vect(paste(workdir, vector_name, sep = "/"))

```

Summary of the raster layer according to `terra::vect`:

```{r}
#| eval: false
selected_vector
```

```{r}
#| eval: false
plot(selected_vector)
```