---
title: "T1.3"
categories:
 - T1.3
 - valid
format:
 html: 
  code-tools:
   source: true
execute:
   echo: false
---

```{r setup}
#| warning: false
#| message: false
library(xml2)
library(terra)

here::i_am("map-info/T1_3.qmd")
out_folder <- here::here("gisdata", "indicative-maps","latest")

map_details_file <- paste(out_folder, "map-details.xml", sep = "/")
# file.exists(map_details_file)
map_details <- read_xml(map_details_file)
map_info <- map_details |> xml_find_first("//Map[@efg_code='T1.3']")
map_attrs <- map_info |> xml_attrs()
```

```{r}
#| output: asis

markdown_text <- sprintf("## Map description\n\n ***%1$s***\n\n%2$s.\n\n **Map code and version**: %3$s %4$s. **Available at** DOI:[%5$s](https://doi.org/%5$s)",
    map_info |> xml_find_first("Functional_group") |> xml_text(),
    map_info |> xml_find_first("Description") |> xml_text(),
        map_attrs["map_code"],
        map_attrs["map_version"],
       map_info |> xml_find_first("Dataset-doi") |> xml_text() 
)

cat(markdown_text)
```





## Raster map

We check the list of map files in the compressed raster archive:


```{r}
rast_tar <- here::here(out_folder, "all-maps-raster-geotiff.tar.bz2")
```


Or, more directly, using map code and map version attributes:


```{r}
raster_name <- 
    sprintf("%s_%s.tif",
        map_attrs["map_code"],
        map_attrs["map_version"])
```


Now we create a temporary directory for the uncompressed data.


```{r}
workdir <- tempdir()
```

```{r}
#| eval: true
#| echo: false

# we use this internally to speed up some steps:
workdir <- here::here("sandbox", "latest")
if (!exists(workdir))
    dir.create(workdir, recursive = TRUE)
```


Extract the data here (unless it already exists)

```{r}
if (!raster_name %in% dir(workdir))
    untar(rast_tar, files = raster_name, exdir = workdir)
```



We'll use the terra library to read the raster file

```{r}
selected_raster <- terra::rast(paste(workdir, raster_name, sep = "/"))

```


Summary of the raster layer according to `terra::rast`:


```{r}
selected_raster
```

```{r}
plot(selected_raster)
```



## Vector map

We follow similar steps for the vector files. 

We vector archive is here:


```{r}
vect_tar <- here::here(out_folder, "all-maps-vector-geojson.tar.bz2")
```


We select the map for this functional group using the map_code and map_version from the map details xml:


```{r}
vector_name <- 
    sprintf("%s_%s.json",
        map_info |> xml_attr("map_code"),
        map_info |> xml_attr("map_version"))
```


We uncompress this into the tempdir


```{r}
print(workdir)
if (!vector_name %in% dir(workdir))
    untar(vect_tar, files = vector_name, exdir = workdir)
```

```{r}
#| eval: true
selected_vector <- terra::vect(paste(workdir, vector_name, sep = "/"))

```


Summary of the raster layer according to `terra::vect`:


```{r}
#| eval: true
selected_vector
```

```{r}
#| eval: false
plot(selected_vector)
```
